---
const { variant = "default", className = "", ...props } = Astro.props;

const baseClass = "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2";

const variantClasses = {
  default: `
    bg-primary text-darkShades hover:bg-primary/90 
    dark:bg-primary dark:text-white dark:hover:bg-primary/80
  `,
  outline: `
    border border-primary text-primary hover:bg-primary hover:text-lightShades 
  `,

  link: `
    text-primary underline-offset-4 hover:underline 
    dark:text-primary dark:hover:text-darkAccent
  `,

  accent: `
    bg-lightAccent text-white hover:bg-lightAccent/90 
    dark:bg-lightAccent dark:text-white dark:hover:bg-lightAccent/80
  `,

  darkAccent: `
    bg-darkAccent text-white hover:bg-darkAccent/90 
    dark:bg-darkAccent dark:text-white dark:hover:bg-darkAccent/80
  `,

  ghost: `
    bg-transparent text-primary hover:bg-lightAccent/10 
    dark:text-primary dark:hover:bg-lightAccent/10
  `,

  subtle: `
    bg-lightShades text-primary hover:bg-lightShades/80 
    dark:bg-dark.background dark:text-dark.text dark:hover:bg-dark.codeBackground
  `,

  inverted: `
    bg-darkShades text-lightShades hover:bg-darkShades/90 
    dark:bg-lightShades dark:text-darkShades dark:hover:bg-lightShades/90
  `,
};

const finalClass = `${baseClass} ${variantClasses[variant] || ""} ${className}`;
---

<div class={finalClass} {...props}>
  <slot />
</div>
